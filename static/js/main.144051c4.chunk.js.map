{"version":3,"sources":["component/Users.module.css","store/users-reducers.ts","component/UserEditForm.tsx","component/UserInputForm.tsx","component/Users.tsx","component/UsersContainer.tsx","App.tsx","reportWebVitals.ts","store/store.ts","index.tsx"],"names":["module","exports","UserSlice","createSlice","name","initialState","users","searchEmailString","searchPhoneString","searchByStatus","reducers","addUser","state","action","payload","user","deleteUser","filter","u","id","sortUsers","setUsers","updateUsers","map","setSearchEmailString","setSearchPhoneString","setSearchByStatus","UsersReducer","reducer","actions","UserEditForm","props","dispatch","useDispatch","useForm","register","handleSubmit","errors","className","s","editFormStyle","onSubmit","data","newId","newData","dataFromLocalStorage","localStorage","getItem","parsedData","JSON","parse","newLocalStorageData","setItem","stringify","isEditModeHandler","tableHead","button","onClick","icon","faWindowClose","tableRows","type","placeholder","ref","required","pattern","defaultValue","email","errorStyle","minLength","maxLength","password","phone","userName","userPatronymic","userSurname","userStatus","value","createdData","lastChangeData","faCheckSquare","UserInputForm","uuid","isInputModeHandler","Users","sortArr","toString","substr","length","tableWrapper","sortPanel","onChange","e","onChangeSearchEmailStringHandler","currentTarget","disabled","faEnvelope","style","padding","onChangeSearchPhoneStringHandler","faPhone","console","log","onChangeSearchByStatusHandler","addUserHandler","faPlusSquare","rowsWrapper","Object","values","i","index","keys","deletUserHandler","faTrash","editModeHandler","faPencilAlt","UsersContainer","parsedDataFomStorage","useSelector","useState","isInputMode","setInputMode","filteredUser","setFilteredUser","isEditMode","setEditMode","useEffect","searchString","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","RootReducer","combineReducers","store","configureStore","middleware","getDefaultMiddleware","prepend","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.144051c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sortPanel\":\"Users_sortPanel__2khvg\",\"tableHead\":\"Users_tableHead__1cItO\",\"tableRows\":\"Users_tableRows__3Nw5K\",\"rowsWrapper\":\"Users_rowsWrapper__3B6L6\",\"button\":\"Users_button__2Uwi1\",\"errorStyle\":\"Users_errorStyle__2aNPG\"};","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\n\r\nexport type initialStateType = {\r\n  users: usersType[]\r\n  searchEmailString: string\r\n  searchPhoneString: string\r\n  searchByStatus: string\r\n};\r\nexport type usersType = {\r\n  id: string\r\n  email: string\r\n  password: string\r\n  phone: number\r\n  userName: string\r\n  userPatronymic: string\r\n  userSurname: string\r\n  userStatus: 'client' | 'partner' | 'admin' | ''\r\n  createdData: string\r\n  lastChangeData: string\r\n};\r\n\r\nconst initialState: initialStateType = {\r\n  users: [],\r\n  searchEmailString: '',\r\n  searchPhoneString: '',\r\n  searchByStatus: ''\r\n};\r\n\r\nconst UserSlice = createSlice({\r\n  name: 'usersReducer',\r\n  initialState: initialState,\r\n  reducers: {\r\n    addUser(state, action: PayloadAction<{ user: usersType }>) {\r\n      return {...state, users: [...state.users, action.payload.user]};\r\n    },\r\n    deleteUser(state, action: PayloadAction<{ id: string }>) {\r\n      return {...state, users: state.users.filter(u => u.id !== action.payload.id)};\r\n    },\r\n    sortUsers(state, action: PayloadAction<any>) {\r\n\r\n    },\r\n    setUsers(state, action: PayloadAction<{ users: usersType[] }>) {\r\n      return {...state, users: [...action.payload.users]};\r\n    },\r\n    updateUsers(state, action: PayloadAction<{ user: usersType }>) {\r\n      return {\r\n        ...state,\r\n        users: [\r\n          ...state.users.map(u => {\r\n            if (u.id === action.payload.user.id) {\r\n              u = {...action.payload.user};\r\n              return u;\r\n            } else {\r\n              return u;\r\n            }\r\n          })\r\n        ]\r\n      };\r\n    },\r\n    setSearchEmailString(state, action: PayloadAction<{ searchEmailString: string }>) {\r\n      state.searchEmailString = action.payload.searchEmailString;\r\n    },\r\n    setSearchPhoneString(state, action: PayloadAction<{ searchPhoneString: string }>) {\r\n      state.searchPhoneString = action.payload.searchPhoneString;\r\n    },\r\n    setSearchByStatus(state, action: PayloadAction<{ searchByStatus: string }>) {\r\n      state.searchByStatus = action.payload.searchByStatus;\r\n    },\r\n  }\r\n});\r\n\r\nexport const UsersReducer = UserSlice.reducer;\r\nexport const {\r\n  addUser,\r\n  deleteUser,\r\n  sortUsers,\r\n  setUsers,\r\n  setSearchEmailString,\r\n  setSearchPhoneString,\r\n  setSearchByStatus,\r\n  updateUsers\r\n} = UserSlice.actions;","import React from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport {useDispatch} from 'react-redux';\r\nimport {initialStateType, updateUsers, usersType} from '../store/users-reducers';\r\nimport s from './Users.module.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faCheckSquare} from '@fortawesome/free-solid-svg-icons';\r\nimport {faWindowClose} from '@fortawesome/free-solid-svg-icons';\r\n\r\ntype UserEditFormPropsType = {\r\n  user: usersType\r\n  isEditModeHandler: (isEditMode: boolean) => void\r\n}\r\n\r\nexport const UserEditForm = (props: UserEditFormPropsType) => {\r\n  const dispatch = useDispatch();\r\n  //initialize hook-form\r\n  const {register, handleSubmit, errors} = useForm<usersType>();\r\n\r\n  // updateHandler\r\n  const onSubmit = (data: usersType) => {\r\n\r\n    const newId = {id:props.user.id};\r\n    const newData: usersType = {...data, ...newId};\r\n    //update localstorage\r\n    const dataFromLocalStorage = localStorage.getItem('users');\r\n    const parsedData:initialStateType = dataFromLocalStorage && JSON.parse(dataFromLocalStorage);\r\n    const newLocalStorageData:initialStateType = {...parsedData,\r\n      users: [...parsedData.users.map(u=>{\r\n          if (u.id === props.user.id){\r\n            u = {...newData}\r\n            return u\r\n          } else { return u }\r\n        })]}\r\n    localStorage.setItem('users', JSON.stringify(newLocalStorageData));\r\n    //update store\r\n    dispatch(updateUsers({user: newData}));\r\n    //close edit window\r\n    props.isEditModeHandler(false);\r\n  };\r\n\r\n  return (\r\n   \r\n  <div className={s.editFormStyle}>\r\n    {props.user?\r\n      <><h1>Отредактируйте данные пользователя</h1>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className={s.tableHead}>\r\n            <div>Email</div>\r\n            <div>Пароль</div>\r\n            <div>Телефон</div>\r\n            <div>Имя</div>\r\n            <div>Отчество</div>\r\n            <div>Фамилия</div>\r\n            <div>Статус</div>\r\n            <div>Дата создания</div>\r\n            <div>Дата изменения</div>\r\n            <div className={s.button}>\r\n              <button onClick={() => props.isEditModeHandler(false)}>\r\n                <FontAwesomeIcon icon={faWindowClose}/>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={s.tableRows}>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder='email'\r\n                ref={register({\r\n                    required: true,\r\n                    pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/\r\n                  }\r\n                )}\r\n                name='email'\r\n                defaultValue={props.user.email}\r\n              />\r\n              {errors?.email?.type === 'required' && <p className={s.errorStyle}>введите email</p>}\r\n              {errors?.email?.type === 'pattern' && <p className={s.errorStyle}>введите корректный email</p>}\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder='пароль'\r\n                ref={register({\r\n                  required: true,\r\n                  minLength: 4,\r\n                  maxLength: 8\r\n                })}\r\n                name='password'\r\n                defaultValue={props.user.password}\r\n              />\r\n              {errors?.password?.type === 'required' && <p className={s.errorStyle}>введите пароль</p>}\r\n              {errors?.password?.type === 'minLength' && <p className={s.errorStyle}>от 4 до 8 символов</p>}\r\n              {errors?.password?.type === 'maxLength' && <p className={s.errorStyle}>от 4 до 8 символов</p>}\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder='телефон'\r\n                ref={register({\r\n                  required: true,\r\n                  pattern: /\\+7\\s?[\\(]{0,1}9[0-9]{2}[\\)]{0,1}\\s?\\d{3}[-]{0,1}\\d{2}[-]{0,1}\\d{2}/\r\n                })}\r\n                name='phone'\r\n                defaultValue={props.user.phone}\r\n              />\r\n              {errors?.phone?.type === 'required' && <p className={s.errorStyle}>введите телефон</p>}\r\n              {errors?.phone?.type === 'pattern' && <p className={s.errorStyle}>введите корректный номер</p>}\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder='Имя'\r\n                ref={register({\r\n                  required: true\r\n                })}\r\n                name='userName'\r\n                defaultValue={props.user.userName}\r\n              />\r\n              {errors?.userName?.type === 'required' && <p className={s.errorStyle}>введите имя</p>}\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder='Отчество'\r\n                ref={register({\r\n                  required: true\r\n                })}\r\n                name='userPatronymic'\r\n                defaultValue={props.user.userPatronymic}\r\n              />\r\n              {errors?.userPatronymic?.type === 'required' && <p className={s.errorStyle}>введите отчество</p>}\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder='Фамилия'\r\n                ref={register({\r\n                  required: true\r\n                })}\r\n                name='userSurname'\r\n                defaultValue={props.user.userSurname}\r\n              />\r\n              {errors?.userSurname?.type === 'required' && <p className={s.errorStyle}>введите фамилию</p>}\r\n            </div>\r\n\r\n            <div>\r\n              <select\r\n                ref={register}\r\n                name='userStatus'\r\n                defaultValue={props.user.userStatus}\r\n              >\r\n                <option value=\"client\">client</option>\r\n                <option value=\"partner\">partner</option>\r\n                <option value=\"admin\">admin</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder='дата создания'\r\n                ref={register({\r\n                  required: true,\r\n                  pattern: /(0[1-9]|1[0-9]|2[0-9]|3[01]).(0[1-9]|1[012]).[0-9]{4}/\r\n                })}\r\n                name='createdData'\r\n                defaultValue={props.user.createdData}\r\n              />\r\n              {errors?.createdData?.type === 'required' && <p className={s.errorStyle}>введите дату</p>}\r\n              {errors?.createdData?.type === 'pattern' && <p className={s.errorStyle}>введите корректную дату</p>}\r\n            </div>\r\n\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder='дата изменения'\r\n                ref={register({\r\n                  required: true,\r\n                  pattern: /(0[1-9]|1[0-9]|2[0-9]|3[01]).(0[1-9]|1[012]).[0-9]{4}/\r\n                })}\r\n                name='lastChangeData'\r\n                defaultValue={props.user.lastChangeData}\r\n              />\r\n              {errors?.lastChangeData?.type === 'required' && <p className={s.errorStyle}>введите дату</p>}\r\n              {errors?.lastChangeData?.type === 'pattern' && <p className={s.errorStyle}>введите корректную дату</p>}\r\n            </div>\r\n\r\n            <div className={s.button}>\r\n              <button>\r\n                <FontAwesomeIcon icon={faCheckSquare}/>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </>:null}\r\n  </div>\r\n\r\n  );\r\n};","import React from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport {useDispatch} from 'react-redux';\r\nimport {addUser, usersType} from '../store/users-reducers';\r\nimport s from './Users.module.css';\r\nimport {v4 as uuid} from 'uuid';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faCheckSquare} from '@fortawesome/free-solid-svg-icons';\r\nimport {faWindowClose} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\ntype UserFormPropsType = {\r\n  users: usersType[]\r\n  isInputModeHandler: (isEditMode: boolean) => void\r\n}\r\n\r\nexport const UserInputForm = (props: UserFormPropsType) => {\r\n\r\n  const dispatch = useDispatch();\r\n//initialize hook-form\r\n  const {register, handleSubmit, errors} = useForm<usersType>();\r\n\r\n  const onSubmit = (data: usersType) => {\r\n\r\n    const newId = {id: uuid()};\r\n    const newData: usersType = {...data, ...newId};\r\n    //data from localstorage\r\n    const dataFromLocalStorage = localStorage.getItem('users');\r\n    const parsedData = dataFromLocalStorage && JSON.parse(dataFromLocalStorage);\r\n    //to localstorage\r\n    const newLocalStorageData = parsedData\r\n      ? {...parsedData, users: [...parsedData.users, newData]}\r\n      : {users: [{...newData}]};\r\n    localStorage.setItem('users', JSON.stringify(newLocalStorageData));\r\n    //to store\r\n    dispatch(addUser({user: newData}));\r\n    props.isInputModeHandler(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n      <h1>Введите информацию о пользователе</h1>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className={s.tableHead}>\r\n          <div>Email</div>\r\n          <div>Пароль</div>\r\n          <div>Телефон</div>\r\n          <div>Имя</div>\r\n          <div>Отчество</div>\r\n          <div>Фамилия</div>\r\n          <div>Статус</div>\r\n          <div>Дата создания</div>\r\n          <div>Дата изменения</div>\r\n          <div className={s.button}>\r\n            <button onClick={() => props.isInputModeHandler(false)}>\r\n              <FontAwesomeIcon icon={faWindowClose}/>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={s.tableRows}>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder='email'\r\n              ref={register({\r\n                  required: true,\r\n                  pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/\r\n                }\r\n              )}\r\n              name='email'/>\r\n            {errors?.email?.type === 'required' && <p className={s.errorStyle}>введите email</p>}\r\n            {errors?.email?.type === 'pattern' && <p className={s.errorStyle}>введите корректный email</p>}\r\n          </div>\r\n\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder='пароль'\r\n              ref={register({\r\n                required: true,\r\n                minLength: 4,\r\n                maxLength: 8\r\n              })}\r\n              name='password'/>\r\n            {errors?.password?.type === 'required' && <p className={s.errorStyle}>введите пароль</p>}\r\n            {errors?.password?.type === 'minLength' && <p className={s.errorStyle}>от 4 до 8 символов</p>}\r\n            {errors?.password?.type === 'maxLength' && <p className={s.errorStyle}>от 4 до 8 символов</p>}\r\n          </div>\r\n\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder='телефон'\r\n              ref={register({\r\n                required: true,\r\n                pattern: /\\+7\\s?[\\(]{0,1}9[0-9]{2}[\\)]{0,1}\\s?\\d{3}[-]{0,1}\\d{2}[-]{0,1}\\d{2}/\r\n              })}\r\n              name='phone'/>\r\n            {errors?.phone?.type === 'required' && <p className={s.errorStyle}>введите телефон</p>}\r\n            {errors?.phone?.type === 'pattern' && <p className={s.errorStyle}>введите корректный номер</p>}\r\n          </div>\r\n\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder='Имя'\r\n              ref={register({\r\n                required: true\r\n              })}\r\n              name='userName'/>\r\n            {errors?.userName?.type === 'required' && <p className={s.errorStyle}>введите имя</p>}\r\n          </div>\r\n\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder='Отчество'\r\n              ref={register({\r\n                required: true\r\n              })}\r\n              name='userPatronymic'/>\r\n            {errors?.userPatronymic?.type === 'required' && <p className={s.errorStyle}>введите отчество</p>}\r\n          </div>\r\n\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder='Фамилия'\r\n              ref={register({\r\n                required: true\r\n              })}\r\n              name='userSurname'/>\r\n            {errors?.userSurname?.type === 'required' && <p className={s.errorStyle}>введите фамилию</p>}\r\n          </div>\r\n\r\n          <div>\r\n            <select\r\n              ref={register}\r\n              name='userStatus'>\r\n              <option value=\"client\">client</option>\r\n              <option value=\"partner\">partner</option>\r\n              <option value=\"admin\">admin</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder='дата создания'\r\n              ref={register({\r\n                required: true,\r\n                pattern: /(0[1-9]|1[0-9]|2[0-9]|3[01]).(0[1-9]|1[012]).[0-9]{4}/\r\n              })}\r\n              name='createdData'/>\r\n            {errors?.createdData?.type === 'required' && <p className={s.errorStyle}>введите дату</p>}\r\n            {errors?.createdData?.type === 'pattern' && <p className={s.errorStyle}>введите корректную дату</p>}\r\n          </div>\r\n\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder='дата изменения'\r\n              ref={register({\r\n                required: true,\r\n                pattern: /(0[1-9]|1[0-9]|2[0-9]|3[01]).(0[1-9]|1[012]).[0-9]{4}/\r\n              })}\r\n              name='lastChangeData'/>\r\n            {errors?.lastChangeData?.type === 'required' && <p className={s.errorStyle}>введите дату</p>}\r\n            {errors?.lastChangeData?.type === 'pattern' && <p className={s.errorStyle}>введите корректную дату</p>}\r\n          </div>\r\n\r\n          <div className={s.button}>\r\n            <button>\r\n              <FontAwesomeIcon icon={faCheckSquare}/>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};","import {faEnvelope, faPencilAlt, faPhone, faPlusSquare, faTrash} from '@fortawesome/free-solid-svg-icons';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport React, {ChangeEvent} from 'react';\r\nimport {usersType} from '../store/users-reducers';\r\nimport s from './Users.module.css';\r\n\r\n\r\nexport type UsersPropsType = {\r\n  users: usersType[]\r\n  searchEmailString: string\r\n  searchPhoneString: string\r\n  searchByStatus: string\r\n  addUserHandler: () => void\r\n  deletUserHandler: (id: string) => void\r\n  onChangeSearchEmailStringHandler: (searchString: string) => void\r\n  onChangeSearchPhoneStringHandler: (searchString: string) => void\r\n  onChangeSearchByStatusHandler: (searchString: string) => void\r\n  editModeHandler: (id: string) => void\r\n}\r\n\r\n\r\nexport const Users = (props: UsersPropsType) => {\r\n//callbacks\r\n  const onChangeSearchEmailStringHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    props.onChangeSearchEmailStringHandler(e.currentTarget.value);\r\n  };\r\n  const onChangeSearchPhoneStringHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    props.onChangeSearchPhoneStringHandler(e.currentTarget.value);\r\n  };\r\n  const onChangeSearchByStatusHandler = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    console.log(e.currentTarget.value);\r\n    props.onChangeSearchByStatusHandler(e.currentTarget.value);\r\n  };\r\n\r\n  //sort users\r\n  let sortArr: usersType[] = [];\r\n\r\n  if (props.searchEmailString === '' && props.searchPhoneString === '' && props.searchByStatus === '') {\r\n    sortArr = props.users;\r\n  } else if (props.searchEmailString !== '') {\r\n    sortArr = props.users.filter(u => u.email.toString().substr(0, props.searchEmailString.length) === props.searchEmailString);\r\n  } else if (props.searchPhoneString !== '') {\r\n    sortArr = props.users.filter(u => u.phone.toString().substr(0, props.searchPhoneString.length) === props.searchPhoneString);\r\n  } else if (props.searchByStatus !== '') {\r\n    sortArr = props.users.filter(u => u.userStatus === props.searchByStatus);\r\n  }\r\n\r\n  return (\r\n    <div className={s.tableWrapper}>\r\n      <h1>Информация о пользователях</h1>\r\n\r\n      <h4>Введите данные для сортировки пользователей</h4>\r\n      <div className={s.sortPanel}>\r\n\r\n        <div>\r\n          <input\r\n            type='text'\r\n            onChange={onChangeSearchEmailStringHandler}\r\n            value={props.searchEmailString}\r\n            disabled={props.searchPhoneString !== '' && props.searchEmailString === ''}\r\n            placeholder={'введите email для поиска'}\r\n          />\r\n          <FontAwesomeIcon icon={faEnvelope} style={{padding: '0 5px'}}/>\r\n        </div>\r\n\r\n        <div>\r\n          <input\r\n            type='text'\r\n            onChange={onChangeSearchPhoneStringHandler}\r\n            value={props.searchPhoneString}\r\n            disabled={props.searchPhoneString === '' && props.searchEmailString !== ''}\r\n            placeholder={'введите телефон'}\r\n          />\r\n          <FontAwesomeIcon icon={faPhone} style={{padding: '0 5px'}}/>\r\n        </div>\r\n\r\n        <select onChange={onChangeSearchByStatusHandler} value={props.searchByStatus}>\r\n          <option value={''}>выберите опцию для сортировки</option>\r\n          <option value={'partner'}>partner</option>\r\n          <option value={'admin'}>admin</option>\r\n          <option value={'client'}>client</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className={s.tableHead}>\r\n        <div>Email</div>\r\n        <div>Пароль</div>\r\n        <div>Телефон</div>\r\n        <div>Имя</div>\r\n        <div>Отчество</div>\r\n        <div>Фамилия</div>\r\n        <div>Статус</div>\r\n        <div>Дата<br/>создания</div>\r\n        <div>Дата<br/>изменения</div>\r\n        <div className={s.button}>\r\n          <button onClick={props.addUserHandler}>\r\n            <FontAwesomeIcon icon={faPlusSquare}/>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <>{\r\n        !props.users || props.users.length === 0\r\n          ? 'добавьте пользователя'\r\n          : sortArr.map(u => {\r\n            return (\r\n              <div className={s.rowsWrapper} key={u.id}>\r\n                <div key={u.id} className={s.tableRows}>\r\n\r\n                  {Object.values(u).map((i, index) => {\r\n                    if (Object.keys(u)[index] !== 'id') {\r\n                      return <div key={index}>{i}</div>;\r\n                    } else {\r\n                      return null;\r\n                    }\r\n                  })}\r\n\r\n                  <div className={s.button}>\r\n                    <button onClick={() => props.deletUserHandler(u.id)}>\r\n                      <FontAwesomeIcon icon={faTrash}/>\r\n                    </button>\r\n                    <button onClick={() => props.editModeHandler(u.id)}>\r\n                      <FontAwesomeIcon icon={faPencilAlt}/>\r\n                    </button>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            );\r\n          })}</>\r\n    </div>\r\n  );\r\n};","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootStateType} from '../store/store';\r\nimport {\r\n  deleteUser,\r\n  initialStateType,\r\n  setUsers,\r\n  setSearchEmailString,\r\n  setSearchPhoneString,\r\n  setSearchByStatus, usersType\r\n} from '../store/users-reducers';\r\nimport {UserEditForm} from './UserEditForm';\r\nimport {UserInputForm} from './UserInputForm';\r\nimport {Users} from './Users';\r\n\r\nexport const UsersContainer = () => {\r\n  //data from localstorage\r\n  const dataFromLocalStorage = localStorage.getItem('users');\r\n  const parsedDataFomStorage: initialStateType = dataFromLocalStorage && JSON.parse(dataFromLocalStorage);\r\n  //data from redux\r\n  const dispatch = useDispatch();\r\n  let users = useSelector<RootStateType, initialStateType>(state => {\r\n    return state.users;\r\n  });\r\n  //local states\r\n  const [isInputMode, setInputMode] = useState<boolean>(false);\r\n  const [filteredUser, setFilteredUser] = useState<usersType[]>([]);\r\n  const [isEditMode, setEditMode] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (!parsedDataFomStorage) return;\r\n    else dispatch(setUsers({users: parsedDataFomStorage.users}));\r\n  }, [dispatch]);\r\n\r\n  //callbacks\r\n  const deleteUserHandler = (id: string) => {\r\n    if (!parsedDataFomStorage) return;\r\n    let newData = {\r\n      ...parsedDataFomStorage,\r\n      users: parsedDataFomStorage.users.filter(u => u.id !== id)\r\n    };\r\n    localStorage.setItem('users', JSON.stringify(newData));\r\n    dispatch(deleteUser({id}));\r\n  };\r\n\r\n  const addUserHandler = () => {\r\n    setInputMode(true);\r\n  };\r\n\r\n  const editUserHandler = (id: string) => {\r\n    setEditMode(true);\r\n    setFilteredUser([...users.users.filter(u => u.id === id)]);\r\n  };\r\n\r\n  const onChangeSearchEmailStringHandler = (searchString: string) => {\r\n    dispatch(setSearchEmailString({searchEmailString: searchString}));\r\n  };\r\n\r\n  const onChangeSearchPhoneStringHandler = (searchString: string) => {\r\n    dispatch(setSearchPhoneString({searchPhoneString: searchString}));\r\n  };\r\n\r\n  const onChangeSearchByStatusHandler = (searchString: string) => {\r\n    dispatch(setSearchByStatus({searchByStatus: searchString}));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isEditMode\r\n        ? <UserEditForm user={filteredUser[0]} isEditModeHandler={setEditMode}/> : null\r\n      }\r\n      {\r\n        !isInputMode\r\n          ? !isEditMode && <Users\r\n            users={users.users}\r\n            searchEmailString={users.searchEmailString}\r\n            searchPhoneString={users.searchPhoneString}\r\n            searchByStatus={users.searchByStatus}\r\n            deletUserHandler={deleteUserHandler}\r\n            addUserHandler={addUserHandler}\r\n            onChangeSearchEmailStringHandler={onChangeSearchEmailStringHandler}\r\n            onChangeSearchPhoneStringHandler={onChangeSearchPhoneStringHandler}\r\n            onChangeSearchByStatusHandler={onChangeSearchByStatusHandler}\r\n            editModeHandler={editUserHandler}\r\n        />\r\n          : <UserInputForm\r\n            users={users.users}\r\n            isInputModeHandler={setInputMode}/>\r\n      }\r\n    </div>\r\n  );\r\n};","import React from 'react';\nimport './App.css';\nimport {UsersContainer} from './component/UsersContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <UsersContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore, combineReducers} from '@reduxjs/toolkit';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {UsersReducer} from './users-reducers';\r\n\r\nconst RootReducer = combineReducers({\r\n  users:UsersReducer\r\n})\r\n\r\nexport type RootStateType = ReturnType<typeof RootReducer>\r\n\r\nexport const store = configureStore({\r\n  reducer: RootReducer,\r\n  middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunkMiddleware)\r\n})\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport {store} from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}